#:kivy 1.11.1
# colormodel.kv
# Kivy GUI Layout Specification for a3app
#
# This file is the equivalent of a CSS file for a Kivy application.
#
# Author: Walker M. White
# Date: September 25, 2019


# A class to space out widgets from one another.
<Separator>:
    size: (dp(5),0)
    canvas:
        Color:
            rgb: self.left
        Rectangle:
            size: [self.size[0]/2,self.size[1]]
            pos:  self.pos
        Color:
            rgb: self.right
        Rectangle:
            size: [self.size[0]/2,self.size[1]]
            pos:  [self.pos[0]+self.size[0]/2,self.pos[1]]
        Color:
            rgb: (0,0,0,1)
        Line:
            points: (self.pos[0]+self.size[0]/2,self.pos[1],self.pos[0]+self.size[0]/2,self.pos[1]+self.size[1])


# A label header for each subpanel.
<PanelHeader>:
    canvas.before:
        Color: 
            rgb: [0.3,0.3,0.3,1]
        Rectangle: 
            size: self.size
            pos: self.pos
    
    font_size: sp(18)
    bold: True


# A chromatic wheel supporting HSV colors
<HSVWheel>:
    size_hint: (1,1)
    radial_segments: 20
    angular_segments: 36
    knob_size: 6
    
    canvas.before:
        Color: 
            rgb: (1,1,1)
        Rectangle: 
            size: self.size
            pos: self.pos    
    
    canvas.after:
        Color: 
            rgb: (0.5,0.0,0.5)
        Ellipse:
            size: [dp(self.knob_size)*3]*2
            pos: [self.center_x+self.knob_pos[0]-dp(self.knob_size)*1.5,self.center_y+self.knob_pos[1]-dp(self.knob_size)*1.5]
        Color: 
            rgb: (0.5,0.5,0.5)
        Ellipse: 
            size: [dp(self.knob_size)*2]*2
            pos: [self.center_x+self.knob_pos[0]-dp(self.knob_size),self.center_y+self.knob_pos[1]-dp(self.knob_size)]


# A class to implement a slider/field combination.
<SliderField>
    orientation: 'vertical'
    slider: slider_part
    field: text_part
    padding: 5
    
    canvas:
        Color: 
            rgb: self.color
        Rectangle: 
            size: self.size
            pos:  self.pos
    
    Label:
        text: root.text
        bold: True
        font_size: sp(18)
        color: root.text_color
        size_hint: (1,.1)
        pos_hint:  {'center_x': 0.5}
        halign: 'center'
        
    Slider:
        id: slider_part
        canvas.before:
            Color:
                rgb: [1-self.parent.color[0],1-self.parent.color[1],1-self.parent.color[2],1]
            Rectangle:
                size: [dp(3),self.size[1]-dp(10)]
                pos:  [self.pos[0]+self.size[0]/2-dp(2),self.pos[1]+dp(5)]
        
        orientation: 'vertical'
        size_hint: (1,.75)
        pos_hint:  {'center_x': 0.5}
        min: root.min_val
        max: root.max_val
        value: root.initial
    
    Widget:
        size: (0,dp(10))
        size_hint: (1, None)
    
    TextInput:
        id: text_part
        size_hint: (1,.15)
        multiline: False
        font_size: sp(16)
        padding_y: ( self.height - self.line_height ) / 2
        padding_x: [(self.width-self._get_text_width(max(self._lines, key=len), self.tab_width, self._label_cached)) / 2.0,0] if self.text else [self.width/2,0]
        input_filter: root.filter_text
        on_focus: None if root.lock or self.focus else root.update_on_text(self,self.text)

    Widget:
        size: (0,dp(5))
        size_hint: (1, None)


# An input panel for defining an RGB color.
<RGBInputPanel>:
    orientation: 'horizontal'
    rSlider: red
    gSlider: green
    bSlider: blue
    
    canvas:
        Color: 
            rgb: (1,1,1)
        Rectangle: 
            size: self.size
            pos: self.pos    
    
    Widget:
        size_hint: (0.125,1)
    
    SliderField:
        id: red
        text: "R"
        color: [1,1,1,1]
        max_val: 25500
        min_val: 0
        value:   25500
        initial: 25500
        factor: 100
        decimals: 0
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)
    
    SliderField:
        id: green
        text: "G"
        color: [1,1,1,1]
        max_val: 25500
        min_val: 0
        value:   25500
        initial: 25500
        factor: 100
        decimals: 0
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)
    
    SliderField:
        id: blue
        text: "B"
        max_val: 25500
        min_val: 0
        value:   25500
        initial: 25500
        factor: 100
        decimals: 0
        color: [1,1,1,1]
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (0.125,1)


# An input panel for defining an CMYK color.
<CMYKInputPanel>:
    orientation: 'horizontal'
    cSlider: cyan
    mSlider: magenta
    ySlider: yellow
    kSlider: black
    
    canvas:
        Color: 
            rgb: (1,1,1)
        Rectangle: 
            size: self.size
            pos: self.pos    
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)
    
    SliderField:
        id: cyan
        text: "C"
        max_val: 10000
        min_val: 0
        factor: 100
        initial: 0.0
        decimals: 1
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)
    
    SliderField:
        id: magenta
        text: "M"
        max_val: 10000
        min_val: 0
        factor: 100
        initial: 0.0
        decimals: 1
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)
    
    SliderField:
        id: yellow
        text: "Y"
        max_val: 10000
        min_val: 0
        factor: 100
        initial: 0.0
        decimals: 1
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)
    
    SliderField:
        id: black
        text: "K"
        max_val: 10000
        min_val: 0
        factor: 100
        initial: 0.0
        decimals: 1
        size_hint: (0.25,1)
    
    Widget:
        size_hint: (None,1)
        size: (sp(10),0)


# An input panel for defining an HSV color.
<HSVInputPanel>:
    orientation: 'vertical'
    size_hint: (None,1)
    size: (sp(300),sp(300))
    hsWheel: wheel
    vSlider: val_slider
    hField: hue_field
    sField: sat_field
    vField: lit_field
    
    canvas:
        Color: 
            rgb: (1,1,1)
        Rectangle: 
            size: self.size
            pos: self.pos    
    
    BoxLayout:
        size_hint: (1,0.85)
        orientation: 'horizontal'
        
        HSVWheel:
            id: wheel
            size_hint: (0.8,1)
            on_size: self.init_wheel(0)
        
        BoxLayout:
            size_hint: (0.2,1)
            orientation: 'horizontal'
            
            canvas:
                Color: 
                    rgb: (1,1,1)
                Rectangle: 
                    size: self.size
                    pos: self.pos    
                
            Slider:
                id: val_slider
                
                canvas.before:
                    Color:
                        rgb: [0,0,0,1]
                    Rectangle:
                        size: [dp(3),self.size[1]-dp(10)]
                        pos:  [self.pos[0]+self.size[0]/2-dp(2),self.pos[1]+dp(5)]
                
                orientation: 'vertical'
                size_hint: (1,0.9)
                pos_hint:  {'left': 0, 'center_y' : 0.5}
                max: 10000
                min: 0
                value: 10000
                on_value: root.v = round(self.value/10000.0,3)
    
    Widget:
        size: (0,dp(11))
        size_hint: (1, None)
        
    BoxLayout:
        size_hint: (1,0.15)
        orientation: 'horizontal'
    
        Label:
            text: "H"
            color: (0,0,0,1)
            font_size: sp(16)
            bold: True
            size: (sp(16),0)
            size_hint: (None, 1)
        
        TextInput:
            id: hue_field
            size_hint: (0.07,1)
            multiline: False
            font_size: sp(16)
            padding_y: ( self.height - self.line_height ) / 2
            padding_x: sp(8)
            input_filter: lambda text, from_undo: text[:7 - len(self.text)]
            on_focus: None if root.lock or self.focus else root.update_on_text(self,self.text)
        
        Label:
            text: "S"
            color: (0,0,0,1)
            font_size: sp(16)
            bold: True
            size: (sp(16),0)
            size_hint: (None,1)
        
        TextInput:
            id: sat_field
            size_hint: (0.07,1)
            multiline: False
            font_size: sp(16)
            padding_y: ( self.height - self.line_height ) / 2
            padding_x: sp(8)
            input_filter: lambda text, from_undo: text[:5 - len(self.text)]
            on_focus: None if root.lock or self.focus else root.update_on_text(self,self.text)
        
        Label:
            text: "V"
            color: (0,0,0,1)
            font_size: sp(16)
            bold: True
            size: (sp(16),0)
            size_hint: (None,1)
        
        TextInput:
            id: lit_field
            size_hint: (0.07,1)
            multiline: False
            font_size: sp(16)
            padding_y: ( self.height - self.line_height ) / 2
            padding_x: sp(8)
            input_filter: lambda text, from_undo: text[:5 - len(self.text)]
            on_focus: None if root.lock or self.focus else root.update_on_text(self,self.text)
        
        Widget:
            size: (sp(6),0)
            size_hint: (None,1)
    
    Widget:
        size: (0,dp(7.5))
        size_hint: (1, None)


# A class to display a color and its complement.
<ColorPanel>:
    canvas:
        Color: 
            rgb: self.background
        Rectangle: 
            size: self.size
            pos: self.pos
    
    Label:
        text: root.text
        color: root.foreground
        font_size: sp(14)
        bold: True
        valign: 'top'
        text_size: (self.parent.size[0]-sp(10),self.parent.size[1]-sp(10))


# A ColorPanel variation with a slider.
<ContrastPanel>:
    slider: levels
    
    canvas:
        Color: 
            rgb: self.background
        Rectangle: 
            size: self.size
            pos: self.pos
    
    Label:
        text: root.text
        color: root.foreground
        font_size: sp(14)
        bold: True
        valign: 'top'
        text_size: (self.parent.size[0]-sp(10),self.parent.size[1]-sp(10))
        size_hint: (1,1)
        
        BoxLayout:
            orientation: 'horizontal'
            size: self.parent.size
            pos: self.parent.pos
            
            Widget:
                size_hint: (0.8,1)
            
            SliderField:
                id: levels
                text: "LVL"
                text_color: root.foreground
                color: root.background
                max_val: 10000
                min_val: -10000
                factor: 10000
                initial: 0.0
                decimals: 3
                size_hint: (.2,1)
            
            Widget:
                size_hint: (None,1)
                size: (sp(10),0)


# A class to implement the fully integrated application.
<ColorWidget>:
    orientation: 'vertical'
    rgbPanel:  rgb_input
    cmykPanel: cmyk_input
    hsvPanel:  hsv_input
    mainPanel: main_panel
    compPanel: comp_panel
    contPanel: cont_panel
    leftSep: left_sep
    rightSep: right_sep
    
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1,None)
        size: (0,sp(300))
    
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.33,1)
        
            PanelHeader:
                text: 'CMYK Values'
                size_hint: (1,0.1)
        
            CMYKInputPanel:
                id: cmyk_input
                size_hint: (1,0.9)
    
        BoxLayout:
            orientation: 'vertical'
            size: (10,0)
            size_hint: (None,1)
            
            PanelHeader:
                size_hint: (1,0.1)
            
            Separator:
                size_hint: (1,.9)
        
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.33,1)
            
            PanelHeader:
                text: 'RGB Values'
                size_hint: (1,0.1)
            
            RGBInputPanel:
                id: rgb_input
                size_hint: (1,.9)
        
        BoxLayout:
            orientation: 'vertical'
            size: (10,0)
            size_hint: (None,1)
            
            PanelHeader:
                size_hint: (1,0.1)
            
            Separator:
                size_hint: (1,.9)
        
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.33,1)
            
            PanelHeader:
                text: 'HSV Values'
                size_hint: (1,0.1)
            
            HSVInputPanel:
                id: hsv_input
                size_hint: (1,0.9)
    
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1,1)
        
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.33,1)
            
            PanelHeader:
                text: 'Complement Panel'
                size_hint: (1,0.1)
            
            ColorPanel:
                id:comp_panel
                foreground: [1,1,1,1]
                background: [0,0,0,1]
                size_hint: (1,0.9)
        
        BoxLayout:
            orientation: 'vertical'
            size: (10,0)
            size_hint: (None,1)
            
            PanelHeader:
                size_hint: (1,0.1)
            
            Separator:
                id: left_sep
                left: [0,0,0,1]
                size_hint: (1,.9)
        
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.33,1)
            
            PanelHeader:
                text: 'Color Panel'
                size_hint: (1,0.1)
            
            ColorPanel:
                id: main_panel
                foreground: [0,0,0,1]
                background: [1,1,1,1]
                size_hint: (1,0.9)
        
        BoxLayout:
            orientation: 'vertical'
            size: (10,0)
            size_hint: (None,1)
            
            PanelHeader:
                size_hint: (1,0.1)
            
            Separator:
                id: right_sep
                size_hint: (1,.9)
        
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.33,1)
            
            PanelHeader:
                text: 'Contrast Panel'
                size_hint: (1,0.1)
            
            ContrastPanel:
                id: cont_panel
                foreground: [0,0,0,1]
                background: [1,1,1,1]
                size_hint: (1,0.9)


